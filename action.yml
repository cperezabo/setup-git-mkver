name: "Setup git-mkver"
description: "It downloads and installs git-mkver"
branding:
  icon: "settings"
  color: "purple"
inputs:
  version:
    description: "The git-mkver version to install"
    required: false
    default: "latest"
runs:
  using: "composite"
  steps:
    - run: |
        if [[ "$VERSION" == "latest" ]]; then
          VERSION=$(curl -s https://api.github.com/repos/idc101/git-mkver/releases/latest | jq -r '.tag_name |= (sub("v";"")) | .tag_name')
        fi

        GIT_MKVER_DIR_LINUX="$HOME/.git-mkver"

        RELEASES_DOWNLOAD_BASE_URL="https://github.com/idc101/git-mkver/releases/download/v$VERSION"

        clean() {
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            rm -rf /c/Windows/System32/git-mkver.exe
          else
            rm -rf $GIT_MKVER_DIR_LINUX
          fi
        }

        download_and_unzip() {
          ASSET_NAME="$1"
          DST_DIRECTORY="$2"
          curl -LO "$RELEASES_DOWNLOAD_BASE_URL/$ASSET_NAME"
          unzip "$ASSET_NAME" -d "$DST_DIRECTORY"
          rm "$ASSET_NAME"
        }

        clean

        if [[ "$RUNNER_OS" == "Windows" ]]; then
          download_and_unzip "git-mkver-windows-amd64-$VERSION.zip" /c/Windows/System32
        else
          if [[ "$VERSION" < "1.3.0" ]]; then
            curl -L "$RELEASES_DOWNLOAD_BASE_URL/git-mkver-linux-amd64-$VERSION.tar.gz" | tar xvz
            mkdir -p $GIT_MKVER_DIR_LINUX/bin
            mv git-mkver "$GIT_MKVER_DIR_LINUX/bin"
            chmod +x "$GIT_MKVER_DIR_LINUX/bin/git-mkver"
          else
            download_and_unzip "git-mkver-$VERSION.zip" .
            rm -rf $GIT_MKVER_DIR_LINUX
            mv "git-mkver-$VERSION" "$GIT_MKVER_DIR_LINUX"
          fi
        fi
      env:
        VERSION: ${{ inputs.version }}
      shell: bash

    - run: echo "${HOME}/.git-mkver/bin" >> $GITHUB_PATH
      if: ${{ runner.os != 'Windows' }}
      shell: bash
